/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CourseContentWhereUniqueInput } from "../../courseContent/base/CourseContentWhereUniqueInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { PartnerWhereUniqueInput } from "../../partner/base/PartnerWhereUniqueInput";
import { TopicUpdateManyWithoutCoursesInput } from "./TopicUpdateManyWithoutCoursesInput";
@InputType()
class CourseUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CourseContentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CourseContentWhereUniqueInput)
  @IsOptional()
  @Field(() => CourseContentWhereUniqueInput, {
    nullable: true,
  })
  content?: CourseContentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  image?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => PartnerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PartnerWhereUniqueInput)
  @IsOptional()
  @Field(() => PartnerWhereUniqueInput, {
    nullable: true,
  })
  partner?: PartnerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TopicUpdateManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => TopicUpdateManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => TopicUpdateManyWithoutCoursesInput, {
    nullable: true,
  })
  topics?: TopicUpdateManyWithoutCoursesInput;
}
export { CourseUpdateInput };
